from tkinter import *
from tkinter import filedialog
from collections import defaultdict
from tkinter.filedialog import askopenfilename
from itertools import *
from functools import partial


class Window(Frame):


    def __init__(self, master=None):
        Frame.__init__(self, master)
        self.master = master
        self.init_window()

    #Creation of init_window
    def init_window(self):


        def openfile2():
            global files
            files = open('brca1 gene text acgt.txt', mode='r')
            print(files)







        # changing the title of our master widget
        self.master.title("GUI")

        # allowing the widget to take the full space of the root window
        self.pack(fill=BOTH, expand=1)
        #opens file dialog for file selection on button click
        #need to figure out how to call the chosen file later in acgt_count
        filesearchbutton = Button(self, text="File Open", command=openfile2())
        filesearchbutton.place(x=10, y=120)

        def get_gc():
            g = 0
            c = 0
            a = 0
            t = 0
            freq = []
            for line in files:
                dna_file = line.rstrip("\n")
                length = len(dna_file)
                for char in line:
                    #is it only doing the first character of every line?

                    # i want to append the index as a key to freq and then add the gc as it's value
                    if char == "g":
                        g += 1
                    if char == "c":
                        c += 1
                    if char == "a":
                        a += 1
                    if char == "t":
                        t += 1
                        gc = (g + c + 0.) / (a + t + c + g + 0.)
                        freq.append(gc)
                        gcmin = min(freq)
                        gcmax = max(freq)
                        gcminindex = freq.index(gcmin)
                        gcmaxindex = freq.index(gcmax)

            label18 = Label(text="number of g's " + str(g)).place(x=10, y=500)
            label19 = Label(text="number of c's " + str(c)).place(x=10, y=480)
            label20 = Label(text="number of a's " + str(a)).place(x=10, y=440)
            label21 = Label(text="number of t's " + str(t)).place(x=10, y=420)
            label17 = Label(text="gc content: " + str(gc)).place(x=10, y=400)
            label22 = Label(text="gc min: " + str(gcmin)).place(x=10, y=520)
            label22 = Label(text="gc max: " + str(gcmax)).place(x=10, y=540)
            label23 = Label(text="gc max index: " + str(gcmaxindex)).place(x=10, y=580)
            label24 = Label(text="gc min index: " + str(gcminindex)).place(x=10, y=600)
            return


        def acgt_count():
            #set files to zero
            g=0
            a=0
            c=0
            t=0

            #skip the first line of header


            #fp = file.readlines()

            for line in files:
                line = line.lower()
                for char in line:
                    if char == "g":
                        g+=1
                    if char == "a":
                        a+=1
                    if char == "c":
                        c+=1
                    if char == "t":
                        t+=1
            label2 = Label(text="number of g's " + str(g)).place(x=10, y=200)
            label3 = Label(text="number of c's " + str(c)).place(x=10, y=240)
            label4 = Label(text="number of a's " + str(a)).place(x=10, y=280)
            label5 = Label(text="number of t's " + str(t)).place(x=10, y=320)
            # 0. = convert to floating point
            gc = (g+c+0.) / (a+t+c+g+0.)
            label6 = Label(text="gc content: " + str(gc)).place(x=10, y=340)
            return


        okayButton = Button(text="Run With text genome", command=lambda: acgt_count())
        okayButton.place(x=10, y=100)
        rungcbutton = Button(text="Run gc", command=lambda: get_gc())
        rungcbutton.place(x=10, y=146)




        #runfilebutton = Button(text="Run text file", command=open_file)
        #runfilebutton.place(x=10, y=160)

root = Tk()

#size of the window
root.geometry("800x800")

app = Window(root)
root.mainloop()
